basePath: /api/v1
definitions:
  dtos.AcceptFriendRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dtos.AcceptFriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      nickname:
        type: string
      user_wallet_address:
        type: string
    type: object
  dtos.AddFriendRequest:
    properties:
      friend_wallet_address:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - user_wallet_address
    type: object
  dtos.AddFriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      status:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - user_wallet_address
    type: object
  dtos.AssignParticipantDetailRequest:
    properties:
      isPaid:
        type: boolean
      items:
        items:
          $ref: '#/definitions/dtos.AssignParticipantItemRequest'
        type: array
      participantId:
        type: string
    type: object
  dtos.AssignParticipantDetailResponse:
    properties:
      amountOwed:
        type: integer
      isPaid:
        type: boolean
      items:
        items:
          $ref: '#/definitions/dtos.AssignParticipantItemWithAmount'
        type: array
      participantId:
        type: string
    type: object
  dtos.AssignParticipantItemRequest:
    properties:
      itemId:
        type: string
    type: object
  dtos.AssignParticipantItemWithAmount:
    properties:
      amount:
        type: integer
      itemId:
        type: string
    type: object
  dtos.AssignParticipantsRequest:
    properties:
      billId:
        type: string
      participants:
        items:
          $ref: '#/definitions/dtos.AssignParticipantDetailRequest'
        type: array
    type: object
  dtos.AssignParticipantsResponse:
    properties:
      billId:
        type: string
      participants:
        items:
          $ref: '#/definitions/dtos.AssignParticipantDetailResponse'
        type: array
    type: object
  dtos.CreateBillWithoutParticipantItemRequest:
    properties:
      name:
        example: Steak
        type: string
      price:
        example: 40000
        type: integer
      priceAfterTax:
        example: 87200
        type: number
      priceInHBAR:
        example: 0
        type: number
      quantity:
        example: 2
        type: integer
    type: object
  dtos.CreateBillWithoutParticipantItemResponse:
    properties:
      itemId:
        type: string
      name:
        type: string
      price:
        type: integer
      priceAfterTax:
        type: number
      priceInHBAR:
        type: number
      quantity:
        type: integer
    type: object
  dtos.CreateBillWithoutParticipantRequest:
    properties:
      creatorId:
        example: user123
        type: string
      date:
        example: "2019-11-02"
        type: string
      items:
        items:
          $ref: '#/definitions/dtos.CreateBillWithoutParticipantItemRequest'
        type: array
      service:
        example: 0
        type: number
      storeName:
        example: East Repair Inc.
        type: string
      tax:
        example: 9.06
        type: number
      totalAmount:
        example: 15406
        type: integer
    type: object
  dtos.CreateBillWithoutParticipantResponse:
    properties:
      billId:
        type: string
      createdAt:
        type: string
      creatorId:
        type: string
      date:
        type: string
      items:
        items:
          $ref: '#/definitions/dtos.CreateBillWithoutParticipantItemResponse'
        type: array
      service:
        type: number
      storeName:
        type: string
      tax:
        type: number
      totalAmount:
        type: integer
    type: object
  dtos.DeclineFriendRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dtos.DeclineFriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      status:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - user_wallet_address
    type: object
  dtos.FriendNicknameRequest:
    properties:
      friend_wallet_address:
        type: string
      nickname:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - nickname
    - user_wallet_address
    type: object
  dtos.FriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      nickname:
        type: string
    type: object
  dtos.GetBillByCreatorItemResponse:
    properties:
      itemId:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    type: object
  dtos.GetBillByCreatorResponse:
    properties:
      billId:
        type: string
      billTitle:
        type: string
      createdAt:
        type: string
      items:
        items:
          $ref: '#/definitions/dtos.GetBillByCreatorItemResponse'
        type: array
      service:
        type: number
      tax:
        type: number
      totalAmount:
        type: integer
    type: object
  dtos.ReceiptItem:
    properties:
      name:
        example: Front and rear brake cables
        type: string
      priceAfterTax:
        example: 105.88083
        type: number
      priceInHBAR:
        example: 0
        type: number
      quantity:
        example: 1
        type: number
      totalPrice:
        example: 100
        type: number
      unitPrice:
        example: 100
        type: number
    type: object
  dtos.ReceiptResponse:
    properties:
      date:
        example: "2025-10-02"
        type: string
      items:
        items:
          $ref: '#/definitions/dtos.ReceiptItem'
        type: array
      service:
        type: number
      storeName:
        example: Nigger Store
        type: string
      tax:
        example: 9.1
        type: number
      totalAmount:
        example: 15.4
        type: number
    type: object
  dtos.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.User:
    properties:
      wallet_address:
        type: string
    type: object
info:
  contact:
    email: Jacksontpa7@gmail.com
  license:
    name: MIT
  version: "1.0"
paths:
  /bills/assign-participants:
    post:
      consumes:
      - application/json
      description: Assign participants to a bill and split item prices equally per
        participant
      parameters:
      - description: Assign Participants Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.AssignParticipantsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Structured Assign Participants Result
          schema:
            $ref: '#/definitions/dtos.AssignParticipantsResponse'
        "400":
          description: Invalid input
        "500":
          description: Internal error
      summary: Assign participants to a bill
      tags:
      - Bill
  /bills/bill-without-participant:
    post:
      consumes:
      - application/json
      description: Save a bill with items, tax, and service, without splitting between
        participants
      parameters:
      - description: Bill Data without participant
        in: body
        name: bill
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateBillWithoutParticipantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CreateBillWithoutParticipantResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create bill (no participants)
      tags:
      - Bill
  /bills/by-creator:
    get:
      consumes:
      - application/json
      description: Get all bills created by a specific creator, optionally filter
        by billId
      parameters:
      - description: Creator ID
        in: query
        name: creatorId
        required: true
        type: string
      - description: Bill ID (optional filter)
        in: query
        name: billId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dtos.GetBillByCreatorResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get bills by creator
      tags:
      - Bill
  /check:
    get:
      description: Check backend health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Check backend health
      tags:
      - Payment
  /confirm-payment:
    get:
      description: example return confirms a payment on Hedera
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Example confirm a payment
      tags:
      - Payment
  /friends/{user_wallet_address}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User Wallet Address
        in: path
        name: user_wallet_address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.FriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Fetch friend
      tags:
      - Friend
  /friends/accept:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.AcceptFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.AcceptFriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Accept friend request
      tags:
      - Friend
  /friends/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.AddFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.AddFriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Create friend request
      tags:
      - Friend
  /friends/alias:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.FriendNicknameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.FriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: add friend nickname
      tags:
      - Friend
  /friends/decline:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.DeclineFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.DeclineFriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Decline friend request
      tags:
      - Friend
  /get-rate:
    get:
      consumes:
      - application/json
      description: Get HBAR Rate by 1 USD
      produces:
      - application/json
      responses:
        "200":
          description: success get HBAR rate
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
        "500":
          description: Failed to fetch HBAR rate
      summary: Get HBAR Rate (1 USD)
      tags:
      - Rate
  /receipt/:
    post:
      consumes:
      - multipart/form-data
      description: Accepts a receipt image (PNG/JPEG) and get the detail.
      parameters:
      - description: Receipt image file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Structured receipt result.
          schema:
            $ref: '#/definitions/dtos.ReceiptResponse'
        "400":
          description: Invalid input (missing file, bad form data).
        "500":
          description: Internal error (Gemini failure, parse error, etc.).
      summary: Extract structured receipt data from an uploaded image
      tags:
      - receipt
  /users:
    post:
      consumes:
      - application/json
      description: Save wallet address to database
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
