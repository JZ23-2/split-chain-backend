basePath: /api/v1
definitions:
  dtos.AcceptFriendRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dtos.AcceptFriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      nickname:
        type: string
      user_wallet_address:
        type: string
    type: object
  dtos.AddFriendRequest:
    properties:
      friend_wallet_address:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - user_wallet_address
    type: object
  dtos.AddFriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      status:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - user_wallet_address
    type: object
  dtos.CreateBillItemResponse:
    properties:
      itemId:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  dtos.CreateBillParticipantResponse:
    properties:
      amountOwed:
        type: integer
      isPaid:
        type: boolean
      items:
        items:
          $ref: '#/definitions/dtos.CreateBillItemResponse'
        type: array
      participantId:
        type: string
    type: object
  dtos.CreateBillRequest:
    properties:
      billTitle:
        example: Dinner at Cafe
        type: string
      creatorId:
        example: user123
        type: string
      participants:
        items:
          $ref: '#/definitions/dtos.CreateParticipantRequest'
        type: array
      totalAmount:
        example: 200000
        type: integer
    type: object
  dtos.CreateBillResponse:
    properties:
      billId:
        type: string
      billTitle:
        type: string
      createdAt:
        type: string
      creatorId:
        type: string
      participants:
        items:
          $ref: '#/definitions/dtos.CreateBillParticipantResponse'
        type: array
      totalAmount:
        type: integer
    type: object
  dtos.CreateItemRequest:
    properties:
      name:
        example: Steak
        type: string
      price:
        example: 80000
        type: integer
    type: object
  dtos.CreateParticipantRequest:
    properties:
      amountOwed:
        example: 100000
        type: integer
      isPaid:
        example: true
        type: boolean
      items:
        items:
          $ref: '#/definitions/dtos.CreateItemRequest'
        type: array
      participantId:
        example: user123
        type: string
    type: object
  dtos.DeclineFriendRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  dtos.DeclineFriendResponse:
    properties:
      friend_wallet_address:
        type: string
      id:
        type: string
      status:
        type: string
      user_wallet_address:
        type: string
    required:
    - friend_wallet_address
    - user_wallet_address
    type: object
  dtos.GetParticipantDetailRequest:
    properties:
      billId:
        type: string
      participantId:
        type: string
    required:
    - billId
    - participantId
    type: object
  dtos.ParticipantDetailResponse:
    properties:
      billId:
        type: string
      billTitle:
        type: string
      creatorId:
        type: string
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      participantId:
        type: string
      totalOwed:
        type: integer
    type: object
  dtos.ReceiptItem:
    properties:
      name:
        example: Front and rear brake cables
        type: string
      priceAfterTax:
        example: 105.88083
        type: number
      priceInHBAR:
        example: 0
        type: number
      quantity:
        example: 1
        type: number
      totalPrice:
        example: 100
        type: number
      unitPrice:
        example: 100
        type: number
    type: object
  dtos.ReceiptResponse:
    properties:
      date:
        example: "2025-10-02"
        type: string
      items:
        items:
          $ref: '#/definitions/dtos.ReceiptItem'
        type: array
      storeName:
        example: Nigger Store
        type: string
      tax:
        example: 9.1
        type: number
      totalAmount:
        example: 15.4
        type: number
    type: object
  models.Item:
    properties:
      billId:
        type: string
      itemId:
        type: string
      name:
        type: string
      participantId:
        type: string
      price:
        type: integer
    type: object
  models.User:
    properties:
      wallet_address:
        type: string
    type: object
info:
  contact:
    email: Jacksontpa7@gmail.com
  license:
    name: MIT
  version: "1.0"
paths:
  /bills:
    post:
      consumes:
      - application/json
      description: Create a bill with participants and their items
      parameters:
      - description: Bill Info
        in: body
        name: bill
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateBillRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CreateBillResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new bill
      tags:
      - Bill
  /check:
    get:
      description: Check backend health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Check backend health
      tags:
      - Payment
  /confirm-payment:
    get:
      description: example return confirms a payment on Hedera
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Example confirm a payment
      tags:
      - Payment
  /friends/accept:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.AcceptFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.AcceptFriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Accept friend request
      tags:
      - Friend
  /friends/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.AddFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.AddFriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Create friend request
      tags:
      - Friend
  /friends/decline:
    post:
      consumes:
      - application/json
      parameters:
      - description: Friend Info
        in: body
        name: friend
        required: true
        schema:
          $ref: '#/definitions/dtos.DeclineFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.DeclineFriendResponse'
        "400":
          description: Invalid Request
        "404":
          description: User or Friend Not Found
        "409":
          description: Relationship Already Exists
        "500":
          description: Internal Server Error
      summary: Decline friend request
      tags:
      - Friend
  /participants/{participant_id}:
    get:
      consumes:
      - application/json
      description: Get participant all bills
      parameters:
      - description: Participant ID
        in: path
        name: participant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ParticipantDetailResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get participant Bills
      tags:
      - Participants
  /participants/{participant_id}/{bill_id}:
    get:
      consumes:
      - application/json
      description: Retrieve participant detail including bill and items using billId
        and participantId
      parameters:
      - description: Bill and Participant IDs
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.GetParticipantDetailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ParticipantDetailResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get participant detail in a bill
      tags:
      - Participants
  /rate:
    post:
      consumes:
      - application/json
      description: Takes a receipt JSON, converts each item's price (after tax) to
        HBAR using the current rate, and returns the updated receipt.
      parameters:
      - description: Receipt data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.ReceiptResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ReceiptResponse'
        "400":
          description: Invalid request
        "500":
          description: Failed to fetch HBAR rate
      summary: Convert item prices to HBAR
      tags:
      - Rate Conversion
  /receipt/:
    post:
      consumes:
      - multipart/form-data
      description: Accepts a receipt image (PNG/JPEG) and get the detail.
      parameters:
      - description: Receipt image file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Structured receipt result.
          schema:
            $ref: '#/definitions/dtos.ReceiptResponse'
        "400":
          description: Invalid input (missing file, bad form data).
        "500":
          description: Internal error (Gemini failure, parse error, etc.).
      summary: Extract structured receipt data from an uploaded image
      tags:
      - receipt
  /users:
    post:
      consumes:
      - application/json
      description: Save wallet address to database
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
